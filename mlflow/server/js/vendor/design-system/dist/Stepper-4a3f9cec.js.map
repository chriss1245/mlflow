{"version":3,"file":"Stepper-4a3f9cec.js","sources":["../src/development/Stepper/Stepper.tsx"],"sourcesContent":["import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { isUndefined } from 'lodash';\nimport { useState, type PropsWithChildren, useRef, useEffect } from 'react';\n\nimport { CheckIcon, CloseIcon, LoadingIcon, Typography, useDesignSystemTheme } from '../../design-system';\nimport { addDebugOutlineIfEnabled } from '../../design-system/utils/debug';\nimport type { Theme } from '../../theme';\nimport { DEFAULT_SPACING_UNIT } from '../../theme/spacing';\n\nexport interface Step {\n  /**\n   * Title of the step\n   */\n  title: React.ReactNode;\n\n  /**\n   * Optional description of the step\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Status of the step. This will change the icon and text color of the step.\n   *\n   * @default 'upcoming'\n   */\n  status?: 'completed' | 'loading' | 'upcoming' | 'error';\n\n  /**\n   * Custom icon to display in the step. If provided, the `icon` prop will be used instead of the default icon.\n   */\n  icon?: React.ComponentType<{ statusColor: string; status: Step['status'] }>;\n\n  /**\n   * Additional content displayed beneath the step description a vertical stepper\n   *\n   * This can be used to create a vertical wizard\n   */\n  additionalVerticalContent?: React.ReactNode;\n}\n\nexport interface StepperProps {\n  /**\n   * List of ordered steps in the stepper\n   */\n  steps: Step[];\n\n  /**\n   * Function to localize the step number; workaround for no react-intl support within dubois\n   *\n   * ex) localizeStepNumber={intl.formatNumber}\n   */\n  localizeStepNumber: (stepIndex: number) => string;\n\n  /**\n   * Direction of the stepper\n   *\n   * @default horizontal\n   */\n  direction?: 'horizontal' | 'vertical';\n\n  /**\n   * Current active step from the `steps` property (zero-indexed)\n   *\n   * @default 0\n   */\n  currentStepIndex?: number;\n\n  /**\n   * If true, and the stepper has a horizontal direction the stepper will be updated to be vertical if width is less than 532px.\n   * Set this value to false to opt out of the responsive behavior.\n   *\n   * @default true\n   */\n  responsive?: boolean;\n}\n\nexport function Stepper({\n  direction: requestedDirection,\n  currentStepIndex: currentStep,\n  steps,\n  localizeStepNumber,\n  responsive = true,\n}: StepperProps) {\n  const { theme } = useDesignSystemTheme();\n  const ref = useRef<HTMLOListElement>(null);\n  const { direction } = useResponsiveDirection({ ref, requestedDirection, responsive, enabled: steps.length > 0 });\n\n  if (steps.length === 0) {\n    return null;\n  }\n\n  const isHorizontal = direction === 'horizontal';\n  const currentStepIndex = currentStep ? Math.min(steps.length - 1, Math.max(0, currentStep)) : 0;\n\n  return (\n    <ol {...addDebugOutlineIfEnabled()} css={css(getStepsStyle(theme, isHorizontal))} ref={ref}>\n      {steps.map((step, index) => {\n        const isCurrentStep = index === currentStepIndex;\n        const isLastStep = index === steps.length - 1;\n        const displayEndingDivider = !isLastStep;\n        const contentTitleLevel = isCurrentStep ? 3 : 4;\n        const StepIcon = step.icon;\n        const {\n          icon,\n          iconBackgroundColor,\n          iconTextColor,\n          titleTextColor,\n          descriptionTextColor,\n          hasStepItemIconBorder,\n        } = getStepContentStyleFields(theme, isCurrentStep, step.status, StepIcon, step.additionalVerticalContent);\n\n        return (\n          <li\n            aria-current={isCurrentStep}\n            key={index}\n            css={css(getStepItemStyle(theme, isHorizontal, isLastStep))}\n            {...(step.status === 'error' && { 'data-error': true })}\n          >\n            <StepContentGrid isHorizontal={isHorizontal} isCurrentStep={isCurrentStep}>\n              <div\n                css={css(getStepItemIconParentStyle(theme, isCurrentStep, iconBackgroundColor, hasStepItemIconBorder))}\n              >\n                {StepIcon ? (\n                  <StepIcon statusColor={iconTextColor} status={step.status} />\n                ) : icon ? (\n                  <span css={{ color: iconTextColor, display: 'flex' }}>{icon}</span>\n                ) : (\n                  <Typography.Title\n                    level={contentTitleLevel}\n                    css={{ color: `${iconTextColor} !important` }}\n                    withoutMargins\n                  >\n                    {localizeStepNumber(index + 1)}\n                  </Typography.Title>\n                )}\n              </div>\n              <Typography.Title\n                level={contentTitleLevel}\n                withoutMargins\n                css={{ flexShrink: 0, color: `${titleTextColor} !important` }}\n              >\n                {step.title}\n              </Typography.Title>\n              {displayEndingDivider && (\n                <div css={css(getStepEndingDividerStyles(theme, isHorizontal, isCurrentStep))} />\n              )}\n              {(step.description || (step.additionalVerticalContent && !isHorizontal)) && (\n                <div css={css(getStepDescriptionStyles(theme, isHorizontal, isLastStep, descriptionTextColor))}>\n                  {step.description && (\n                    <Typography.Text\n                      css={css(getStepDescriptionTextStyles(descriptionTextColor))}\n                      withoutMargins\n                      size=\"sm\"\n                    >\n                      {step.description}\n                    </Typography.Text>\n                  )}\n                  {step.additionalVerticalContent && !isHorizontal && (\n                    <div css={css(getAdditionalVerticalStepContentStyles(theme, Boolean(step.description)))}>\n                      {step.additionalVerticalContent}\n                    </div>\n                  )}\n                </div>\n              )}\n            </StepContentGrid>\n          </li>\n        );\n      })}\n    </ol>\n  );\n}\n\nfunction getStepsStyle(theme: Theme, isHorizontal: boolean): SerializedStyles {\n  return css({\n    listStyle: 'none',\n    display: 'flex',\n    flexDirection: isHorizontal ? 'row' : 'column',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    gap: theme.spacing.md,\n    width: '100%',\n    margin: '0',\n    padding: '0',\n  });\n}\n\nfunction getStepItemStyle(theme: Theme, isHorizontal: boolean, isLastStep: boolean): SerializedStyles {\n  return css({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexGrow: isLastStep ? 0 : 1,\n    marginRight: isLastStep ? theme.spacing.lg + theme.spacing.md : 0,\n    width: isHorizontal ? undefined : '100%',\n  });\n}\n\nfunction getStepContentStyleFields(\n  theme: Theme,\n  isCurrentStep: boolean,\n  status: Step['status'],\n  icon: Step['icon'],\n  additionalVerticalContent: Step['additionalVerticalContent'],\n) {\n  const fields = getStepContentStyleFieldsFromStatus(\n    theme,\n    isCurrentStep,\n    status,\n    !isUndefined(additionalVerticalContent),\n  );\n  if (icon) {\n    return {\n      ...fields,\n      icon: undefined,\n      iconBackgroundColor: undefined,\n      iconTextColor: getCustomIconColor(theme, isCurrentStep, status),\n      hasStepItemIconBorder: false,\n    };\n  }\n\n  return fields;\n}\n\nfunction getCustomIconColor(theme: Theme, isCurrentStep: boolean, status: Step['status']): string {\n  switch (status) {\n    case 'completed':\n      return theme.colors.actionDefaultBackgroundPress;\n    case 'loading':\n      return theme.colors.textPlaceholder;\n    case 'error':\n      return theme.colors.textValidationDanger;\n    default:\n    case 'upcoming':\n      return isCurrentStep ? theme.colors.actionLinkDefault : theme.colors.textPlaceholder;\n  }\n}\n\nfunction getStepContentStyleFieldsFromStatus(\n  theme: Theme,\n  isCurrentStep: boolean,\n  status: Step['status'],\n  hasAdditionalVerticalContent: boolean,\n): {\n  icon: React.ReactNode | undefined;\n  iconBackgroundColor: string | undefined;\n  iconTextColor: string;\n  titleTextColor: string;\n  descriptionTextColor: string;\n  hasStepItemIconBorder: boolean;\n} {\n  switch (status) {\n    case 'completed':\n      return {\n        icon: <CheckIcon />,\n        iconBackgroundColor: theme.colors.actionDefaultBackgroundPress,\n        iconTextColor: theme.colors.textPlaceholder,\n        titleTextColor: theme.colors.textPrimary,\n        descriptionTextColor: theme.colors.textSecondary,\n        hasStepItemIconBorder: true,\n      };\n    case 'loading':\n      return {\n        icon: (\n          <LoadingIcon\n            spin\n            css={{ fontSize: isCurrentStep ? theme.typography.fontSizeXl : theme.typography.fontSizeLg }}\n          />\n        ),\n        iconBackgroundColor: undefined,\n        iconTextColor: theme.colors.textPlaceholder,\n        titleTextColor: isCurrentStep ? theme.colors.textPrimary : theme.colors.textSecondary,\n        descriptionTextColor: theme.colors.textSecondary,\n        hasStepItemIconBorder: false,\n      };\n    case 'error':\n      return {\n        icon: <CloseIcon />,\n        iconBackgroundColor: theme.colors.textValidationDanger,\n        iconTextColor: 'white',\n        titleTextColor: theme.colors.textValidationDanger,\n        descriptionTextColor: theme.colors.textValidationDanger,\n        hasStepItemIconBorder: false,\n      };\n    default:\n    case 'upcoming':\n      if (isCurrentStep) {\n        return {\n          icon: undefined,\n          iconBackgroundColor: theme.colors.actionLinkDefault,\n          iconTextColor: 'white',\n          titleTextColor: theme.colors.textPrimary,\n          descriptionTextColor: hasAdditionalVerticalContent ? theme.colors.textSecondary : theme.colors.textPrimary,\n          hasStepItemIconBorder: false,\n        };\n      }\n      return {\n        icon: undefined,\n        iconBackgroundColor: undefined,\n        iconTextColor: theme.colors.textPlaceholder,\n        titleTextColor: theme.colors.textSecondary,\n        descriptionTextColor: theme.colors.textSecondary,\n        hasStepItemIconBorder: true,\n      };\n  }\n}\n\nconst MaxHorizontalStepDescriptionWidth = 140;\nconst CurrentStepIconSize = DEFAULT_SPACING_UNIT * 4;\nconst NonCurrentStepIconSize = DEFAULT_SPACING_UNIT * 3;\n\nfunction getStepItemIconParentStyle(\n  theme: Theme,\n  isCurrentStep: boolean,\n  iconBackgroundColor: string | undefined,\n  hasStepItemIconBorder: boolean,\n): SerializedStyles {\n  return css({\n    width: isCurrentStep ? CurrentStepIconSize : NonCurrentStepIconSize,\n    height: isCurrentStep ? CurrentStepIconSize : NonCurrentStepIconSize,\n    backgroundColor: iconBackgroundColor,\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '20px',\n    flexShrink: 0,\n    border: hasStepItemIconBorder ? `1px solid ${theme.colors.textPlaceholder}` : undefined,\n  });\n}\n\nfunction getStepEndingDividerStyles(theme: Theme, isHorizontal: boolean, isCurrentStep: boolean): SerializedStyles {\n  const backgroundColor = isCurrentStep ? theme.colors.actionLinkDefault : theme.colors.border;\n\n  if (isHorizontal) {\n    return css({\n      backgroundColor,\n      height: '1px',\n      width: '100%',\n      minWidth: theme.spacing.md,\n    });\n  }\n  return css({\n    backgroundColor,\n    height: '100%',\n    minHeight: theme.spacing.md,\n    width: '1px',\n    alignSelf: 'flex-start',\n    marginLeft: theme.spacing.md,\n  });\n}\n\nfunction getStepDescriptionStyles(\n  theme: Theme,\n  isHorizontal: boolean,\n  isLastStep: boolean,\n  textColor: string,\n): SerializedStyles {\n  return css({\n    alignSelf: 'flex-start',\n    width: '100%',\n    gridColumn: isHorizontal || isLastStep ? '2 / span 2' : undefined,\n    maxWidth: isHorizontal ? MaxHorizontalStepDescriptionWidth : undefined,\n    paddingBottom: isHorizontal ? undefined : theme.spacing.sm,\n    color: `${textColor} !important`,\n  });\n}\n\nfunction getStepDescriptionTextStyles(textColor: string): SerializedStyles {\n  return css({\n    color: `${textColor} !important`,\n  });\n}\n\nfunction getAdditionalVerticalStepContentStyles(theme: Theme, addTopPadding: boolean): SerializedStyles {\n  return css({\n    paddingTop: addTopPadding ? theme.spacing.sm : 0,\n  });\n}\n\nfunction StepContentGrid({\n  children,\n  isHorizontal,\n  isCurrentStep,\n}: PropsWithChildren<{ isHorizontal: boolean; isCurrentStep: boolean }>) {\n  const { theme } = useDesignSystemTheme();\n  if (isHorizontal) {\n    return (\n      <div\n        css={{\n          display: 'grid',\n          gridTemplateColumns: `${\n            isCurrentStep ? CurrentStepIconSize : NonCurrentStepIconSize\n          }px fit-content(100%) 1fr`,\n          gridTemplateRows: `${CurrentStepIconSize}px auto`,\n          alignItems: 'center',\n          justifyItems: 'flex-start',\n          gridColumnGap: theme.spacing.sm,\n          width: '100%',\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n  return (\n    <div\n      css={{\n        display: 'grid',\n        gridTemplateColumns: `${CurrentStepIconSize}px auto`,\n        alignItems: 'center',\n        justifyItems: 'flex-start',\n        gridColumnGap: theme.spacing.md,\n        gridRowGap: theme.spacing.sm,\n        width: '100%',\n        '& > :first-child': {\n          // horizontally center the first column (circle/icon)\n          justifySelf: 'center',\n        },\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Ant design uses the same value for their stepper and to works well for us as well.\nconst MinimumHorizonalDirectionWidth = 532;\n\n// exported for unit test\nexport function useResponsiveDirection({\n  requestedDirection = 'horizontal',\n  responsive,\n  enabled,\n  ref,\n}: {\n  requestedDirection: StepperProps['direction'];\n  enabled: boolean;\n  responsive: boolean;\n  ref: React.RefObject<HTMLOListElement>;\n}) {\n  const [direction, setDirection] = useState(requestedDirection);\n\n  useEffect(() => {\n    if (requestedDirection === 'vertical' || !enabled || !responsive || !ref.current) {\n      return;\n    }\n\n    let timeoutId: number;\n    const resizeObserver = new ResizeObserver((entries) => {\n      timeoutId = requestAnimationFrame(() => {\n        if (entries.length === 1) {\n          const width = entries[0].target.clientWidth || 0;\n          setDirection(width < MinimumHorizonalDirectionWidth ? 'vertical' : 'horizontal');\n        }\n      });\n    });\n    if (ref.current) {\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(timeoutId);\n    };\n  }, [requestedDirection, enabled, ref, responsive]);\n\n  return { direction };\n}\n"],"names":["Stepper","_ref","direction","requestedDirection","currentStepIndex","currentStep","steps","localizeStepNumber","responsive","theme","useDesignSystemTheme","ref","useRef","useResponsiveDirection","enabled","length","isHorizontal","Math","min","max","_jsx","addDebugOutlineIfEnabled","css","getStepsStyle","process","env","NODE_ENV","children","map","step","index","isCurrentStep","isLastStep","displayEndingDivider","contentTitleLevel","StepIcon","icon","iconBackgroundColor","iconTextColor","titleTextColor","descriptionTextColor","hasStepItemIconBorder","getStepContentStyleFields","status","additionalVerticalContent","getStepItemStyle","_jsxs","StepContentGrid","getStepItemIconParentStyle","statusColor","_css","color","display","Typography","Title","level","withoutMargins","flexShrink","title","getStepEndingDividerStyles","description","getStepDescriptionStyles","Text","getStepDescriptionTextStyles","size","getAdditionalVerticalStepContentStyles","Boolean","listStyle","flexDirection","flexWrap","alignItems","gap","spacing","md","width","margin","padding","justifyContent","flexGrow","marginRight","lg","undefined","fields","getStepContentStyleFieldsFromStatus","_isUndefined","getCustomIconColor","colors","actionDefaultBackgroundPress","textPlaceholder","textValidationDanger","actionLinkDefault","hasAdditionalVerticalContent","CheckIcon","textPrimary","textSecondary","LoadingIcon","spin","fontSize","typography","fontSizeXl","fontSizeLg","CloseIcon","MaxHorizontalStepDescriptionWidth","CurrentStepIconSize","DEFAULT_SPACING_UNIT","NonCurrentStepIconSize","height","backgroundColor","borderRadius","border","minWidth","minHeight","alignSelf","marginLeft","textColor","gridColumn","maxWidth","paddingBottom","sm","addTopPadding","paddingTop","_ref2","gridTemplateColumns","gridTemplateRows","justifyItems","gridColumnGap","gridRowGap","justifySelf","MinimumHorizonalDirectionWidth","_ref3","setDirection","useState","useEffect","current","timeoutId","resizeObserver","ResizeObserver","entries","requestAnimationFrame","target","clientWidth","observe","disconnect","cancelAnimationFrame"],"mappings":";;;;;;AA6EO,SAASA,OAAOA,CAAAC,IAAA,EAMN;EAAA,IANO;AACtBC,IAAAA,SAAS,EAAEC,kBAAkB;AAC7BC,IAAAA,gBAAgB,EAAEC,WAAW;IAC7BC,KAAK;IACLC,kBAAkB;AAClBC,IAAAA,UAAU,GAAG,IAAA;AACD,GAAC,GAAAP,IAAA,CAAA;EACb,MAAM;AAAEQ,IAAAA,KAAAA;GAAO,GAAGC,oBAAoB,EAAE,CAAA;AACxC,EAAA,MAAMC,GAAG,GAAGC,MAAM,CAAmB,IAAI,CAAC,CAAA;EAC1C,MAAM;AAAEV,IAAAA,SAAAA;GAAW,GAAGW,sBAAsB,CAAC;IAAEF,GAAG;IAAER,kBAAkB;IAAEK,UAAU;AAAEM,IAAAA,OAAO,EAAER,KAAK,CAACS,MAAM,GAAG,CAAA;AAAE,GAAC,CAAC,CAAA;AAEhH,EAAA,IAAIT,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;AACtB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,MAAMC,YAAY,GAAGd,SAAS,KAAK,YAAY,CAAA;EAC/C,MAAME,gBAAgB,GAAGC,WAAW,GAAGY,IAAI,CAACC,GAAG,CAACZ,KAAK,CAACS,MAAM,GAAG,CAAC,EAAEE,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEd,WAAW,CAAC,CAAC,GAAG,CAAC,CAAA;AAE/F,EAAA,OACEe,GAAA,CAAA,IAAA,EAAA;IAAA,GAAQC,wBAAwB,EAAE;AAAEC,IAAAA,GAAG,eAAEA,GAAG,CAACC,aAAa,CAACd,KAAK,EAAEO,YAAY,CAAC,EAAAQ,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;AAACf,IAAAA,GAAG,EAAEA,GAAI;IAAAgB,QAAA,EACxFrB,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;AAC1B,MAAA,MAAMC,aAAa,GAAGD,KAAK,KAAK1B,gBAAgB,CAAA;MAChD,MAAM4B,UAAU,GAAGF,KAAK,KAAKxB,KAAK,CAACS,MAAM,GAAG,CAAC,CAAA;MAC7C,MAAMkB,oBAAoB,GAAG,CAACD,UAAU,CAAA;AACxC,MAAA,MAAME,iBAAiB,GAAGH,aAAa,GAAG,CAAC,GAAG,CAAC,CAAA;AAC/C,MAAA,MAAMI,QAAQ,GAAGN,IAAI,CAACO,IAAI,CAAA;MAC1B,MAAM;QACJA,IAAI;QACJC,mBAAmB;QACnBC,aAAa;QACbC,cAAc;QACdC,oBAAoB;AACpBC,QAAAA,qBAAAA;AACF,OAAC,GAAGC,yBAAyB,CAACjC,KAAK,EAAEsB,aAAa,EAAEF,IAAI,CAACc,MAAM,EAAER,QAAQ,EAAEN,IAAI,CAACe,yBAAyB,CAAC,CAAA;AAE1G,MAAA,OACExB,GAAA,CAAA,IAAA,EAAA;AACE,QAAA,cAAA,EAAcW,aAAc;AAE5BT,QAAAA,GAAG,eAAEA,GAAG,CAACuB,gBAAgB,CAACpC,KAAK,EAAEO,YAAY,EAAEgB,UAAU,CAAC,EAAAR,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;AAAA,QAAA,IACvDG,IAAI,CAACc,MAAM,KAAK,OAAO,IAAI;AAAE,UAAA,YAAY,EAAE,IAAA;SAAM,CAAA;QAAAhB,QAAA,EAEtDmB,IAAA,CAACC,eAAe,EAAA;AAAC/B,UAAAA,YAAY,EAAEA,YAAa;AAACe,UAAAA,aAAa,EAAEA,aAAc;AAAAJ,UAAAA,QAAA,GACxEP,GAAA,CAAA,KAAA,EAAA;AACEE,YAAAA,GAAG,eAAEA,GAAG,CAAC0B,0BAA0B,CAACvC,KAAK,EAAEsB,aAAa,EAAEM,mBAAmB,EAAEI,qBAAqB,CAAC,EAAAjB,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;AAAAC,YAAAA,QAAA,EAEtGQ,QAAQ,GACPf,GAAA,CAACe,QAAQ,EAAA;AAACc,cAAAA,WAAW,EAAEX,aAAc;cAACK,MAAM,EAAEd,IAAI,CAACc,MAAAA;AAAO,aAAE,CAAC,GAC3DP,IAAI,GACNhB,GAAA,CAAA,MAAA,EAAA;cAAME,GAAG,eAAA4B,GAAA,CAAE;AAAEC,gBAAAA,KAAK,EAAEb,aAAa;AAAEc,gBAAAA,OAAO,EAAE,MAAA;AAAO,eAAC,EAAA5B,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;AAAAC,cAAAA,QAAA,EAAES,IAAAA;AAAI,aAAO,CAAC,GAEnEhB,GAAA,CAACiC,UAAU,CAACC,KAAK,EAAA;AACfC,cAAAA,KAAK,EAAErB,iBAAkB;cACzBZ,GAAG,eAAA4B,GAAA,CAAE;gBAAEC,KAAK,EAAG,GAAEb,aAAc,CAAA,WAAA,CAAA;AAAa,eAAC,EAAAd,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;cAC9C8B,cAAc,EAAA,IAAA;AAAA7B,cAAAA,QAAA,EAEbpB,kBAAkB,CAACuB,KAAK,GAAG,CAAC,CAAA;aACb,CAAA;AACnB,WACE,CAAC,EACNV,GAAA,CAACiC,UAAU,CAACC,KAAK,EAAA;AACfC,YAAAA,KAAK,EAAErB,iBAAkB;YACzBsB,cAAc,EAAA,IAAA;YACdlC,GAAG,eAAA4B,GAAA,CAAE;AAAEO,cAAAA,UAAU,EAAE,CAAC;cAAEN,KAAK,EAAG,GAAEZ,cAAe,CAAA,WAAA,CAAA;AAAa,aAAC,EAAAf,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;YAAAC,QAAA,EAE7DE,IAAI,CAAC6B,KAAAA;AAAK,WACK,CAAC,EAClBzB,oBAAoB,IACnBb,GAAA,CAAA,KAAA,EAAA;AAAKE,YAAAA,GAAG,eAAEA,GAAG,CAACqC,0BAA0B,CAAClD,KAAK,EAAEO,YAAY,EAAEe,aAAa,CAAC,EAAAP,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;AAAE,WAAE,CACjF,EACA,CAACG,IAAI,CAAC+B,WAAW,IAAK/B,IAAI,CAACe,yBAAyB,IAAI,CAAC5B,YAAa,KACrE8B,IAAA,CAAA,KAAA,EAAA;AAAKxB,YAAAA,GAAG,eAAEA,GAAG,CAACuC,wBAAwB,CAACpD,KAAK,EAAEO,YAAY,EAAEgB,UAAU,EAAEQ,oBAAoB,CAAC,EAAAhB,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;YAAAC,QAAA,EAAA,CAC5FE,IAAI,CAAC+B,WAAW,IACfxC,GAAA,CAACiC,UAAU,CAACS,IAAI,EAAA;AACdxC,cAAAA,GAAG,eAAEA,GAAG,CAACyC,4BAA4B,CAACvB,oBAAoB,CAAC,EAAAhB,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;cAC7D8B,cAAc,EAAA,IAAA;AACdQ,cAAAA,IAAI,EAAC,IAAI;cAAArC,QAAA,EAERE,IAAI,CAAC+B,WAAAA;aACS,CAClB,EACA/B,IAAI,CAACe,yBAAyB,IAAI,CAAC5B,YAAY,IAC9CI,GAAA,CAAA,KAAA,EAAA;cAAKE,GAAG,eAAEA,GAAG,CAAC2C,sCAAsC,CAACxD,KAAK,EAAEyD,OAAO,CAACrC,IAAI,CAAC+B,WAAW,CAAC,CAAC,EAAApC,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,iBAAA,CAAA;cAAAC,QAAA,EACrFE,IAAI,CAACe,yBAAAA;AAAyB,aAC5B,CACN,CAAA;AAAA,WACE,CACN,CAAA;SACc,CAAA;AAAC,OAAA,EAlDbd,KAmDH,CAAC,CAAA;KAER,CAAA;AAAC,GACA,CAAC,CAAA;AAET,CAAA;AAEA,SAASP,aAAaA,CAACd,KAAY,EAAEO,YAAqB,EAAoB;AAC5E,EAAA,oBAAOM,GAAG,CAAC;AACT6C,IAAAA,SAAS,EAAE,MAAM;AACjBf,IAAAA,OAAO,EAAE,MAAM;AACfgB,IAAAA,aAAa,EAAEpD,YAAY,GAAG,KAAK,GAAG,QAAQ;AAC9CqD,IAAAA,QAAQ,EAAE,MAAM;AAChBC,IAAAA,UAAU,EAAE,YAAY;AACxBC,IAAAA,GAAG,EAAE9D,KAAK,CAAC+D,OAAO,CAACC,EAAE;AACrBC,IAAAA,KAAK,EAAE,MAAM;AACbC,IAAAA,MAAM,EAAE,GAAG;AACXC,IAAAA,OAAO,EAAE,GAAA;AACX,GAAC,EAAApD,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,uBAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASmB,gBAAgBA,CAACpC,KAAY,EAAEO,YAAqB,EAAEgB,UAAmB,EAAoB;AACpG,EAAA,oBAAOV,GAAG,CAAC;AACT8B,IAAAA,OAAO,EAAE,MAAM;AACfgB,IAAAA,aAAa,EAAE,QAAQ;AACvBE,IAAAA,UAAU,EAAE,QAAQ;AACpBO,IAAAA,cAAc,EAAE,YAAY;AAC5BC,IAAAA,QAAQ,EAAE9C,UAAU,GAAG,CAAC,GAAG,CAAC;AAC5B+C,IAAAA,WAAW,EAAE/C,UAAU,GAAGvB,KAAK,CAAC+D,OAAO,CAACQ,EAAE,GAAGvE,KAAK,CAAC+D,OAAO,CAACC,EAAE,GAAG,CAAC;AACjEC,IAAAA,KAAK,EAAE1D,YAAY,GAAGiE,SAAS,GAAG,MAAA;AACpC,GAAC,EAAAzD,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,0BAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASgB,yBAAyBA,CAChCjC,KAAY,EACZsB,aAAsB,EACtBY,MAAsB,EACtBP,IAAkB,EAClBQ,yBAA4D,EAC5D;AACA,EAAA,MAAMsC,MAAM,GAAGC,mCAAmC,CAChD1E,KAAK,EACLsB,aAAa,EACbY,MAAM,EACN,CAACyC,YAAA,CAAYxC,yBAAyB,CACxC,CAAC,CAAA;AACD,EAAA,IAAIR,IAAI,EAAE;IACR,OAAO;AACL,MAAA,GAAG8C,MAAM;AACT9C,MAAAA,IAAI,EAAE6C,SAAS;AACf5C,MAAAA,mBAAmB,EAAE4C,SAAS;MAC9B3C,aAAa,EAAE+C,kBAAkB,CAAC5E,KAAK,EAAEsB,aAAa,EAAEY,MAAM,CAAC;AAC/DF,MAAAA,qBAAqB,EAAE,KAAA;KACxB,CAAA;AACH,GAAA;AAEA,EAAA,OAAOyC,MAAM,CAAA;AACf,CAAA;AAEA,SAASG,kBAAkBA,CAAC5E,KAAY,EAAEsB,aAAsB,EAAEY,MAAsB,EAAU;AAChG,EAAA,QAAQA,MAAM;AACZ,IAAA,KAAK,WAAW;AACd,MAAA,OAAOlC,KAAK,CAAC6E,MAAM,CAACC,4BAA4B,CAAA;AAClD,IAAA,KAAK,SAAS;AACZ,MAAA,OAAO9E,KAAK,CAAC6E,MAAM,CAACE,eAAe,CAAA;AACrC,IAAA,KAAK,OAAO;AACV,MAAA,OAAO/E,KAAK,CAAC6E,MAAM,CAACG,oBAAoB,CAAA;AAC1C,IAAA,QAAA;AACA,IAAA,KAAK,UAAU;AACb,MAAA,OAAO1D,aAAa,GAAGtB,KAAK,CAAC6E,MAAM,CAACI,iBAAiB,GAAGjF,KAAK,CAAC6E,MAAM,CAACE,eAAe,CAAA;AACxF,GAAA;AACF,CAAA;AAEA,SAASL,mCAAmCA,CAC1C1E,KAAY,EACZsB,aAAsB,EACtBY,MAAsB,EACtBgD,4BAAqC,EAQrC;AACA,EAAA,QAAQhD,MAAM;AACZ,IAAA,KAAK,WAAW;MACd,OAAO;AACLP,QAAAA,IAAI,EAAEhB,GAAA,CAACwE,SAAS,IAAE,CAAC;AACnBvD,QAAAA,mBAAmB,EAAE5B,KAAK,CAAC6E,MAAM,CAACC,4BAA4B;AAC9DjD,QAAAA,aAAa,EAAE7B,KAAK,CAAC6E,MAAM,CAACE,eAAe;AAC3CjD,QAAAA,cAAc,EAAE9B,KAAK,CAAC6E,MAAM,CAACO,WAAW;AACxCrD,QAAAA,oBAAoB,EAAE/B,KAAK,CAAC6E,MAAM,CAACQ,aAAa;AAChDrD,QAAAA,qBAAqB,EAAE,IAAA;OACxB,CAAA;AACH,IAAA,KAAK,SAAS;MACZ,OAAO;QACLL,IAAI,EACFhB,GAAA,CAAC2E,WAAW,EAAA;UACVC,IAAI,EAAA,IAAA;UACJ1E,GAAG,eAAA4B,GAAA,CAAE;AAAE+C,YAAAA,QAAQ,EAAElE,aAAa,GAAGtB,KAAK,CAACyF,UAAU,CAACC,UAAU,GAAG1F,KAAK,CAACyF,UAAU,CAACE,UAAAA;AAAW,WAAC,EAAA5E,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,cAAA,CAAA;AAAC,SAC9F,CACF;AACDW,QAAAA,mBAAmB,EAAE4C,SAAS;AAC9B3C,QAAAA,aAAa,EAAE7B,KAAK,CAAC6E,MAAM,CAACE,eAAe;AAC3CjD,QAAAA,cAAc,EAAER,aAAa,GAAGtB,KAAK,CAAC6E,MAAM,CAACO,WAAW,GAAGpF,KAAK,CAAC6E,MAAM,CAACQ,aAAa;AACrFtD,QAAAA,oBAAoB,EAAE/B,KAAK,CAAC6E,MAAM,CAACQ,aAAa;AAChDrD,QAAAA,qBAAqB,EAAE,KAAA;OACxB,CAAA;AACH,IAAA,KAAK,OAAO;MACV,OAAO;AACLL,QAAAA,IAAI,EAAEhB,GAAA,CAACiF,SAAS,IAAE,CAAC;AACnBhE,QAAAA,mBAAmB,EAAE5B,KAAK,CAAC6E,MAAM,CAACG,oBAAoB;AACtDnD,QAAAA,aAAa,EAAE,OAAO;AACtBC,QAAAA,cAAc,EAAE9B,KAAK,CAAC6E,MAAM,CAACG,oBAAoB;AACjDjD,QAAAA,oBAAoB,EAAE/B,KAAK,CAAC6E,MAAM,CAACG,oBAAoB;AACvDhD,QAAAA,qBAAqB,EAAE,KAAA;OACxB,CAAA;AACH,IAAA,QAAA;AACA,IAAA,KAAK,UAAU;AACb,MAAA,IAAIV,aAAa,EAAE;QACjB,OAAO;AACLK,UAAAA,IAAI,EAAE6C,SAAS;AACf5C,UAAAA,mBAAmB,EAAE5B,KAAK,CAAC6E,MAAM,CAACI,iBAAiB;AACnDpD,UAAAA,aAAa,EAAE,OAAO;AACtBC,UAAAA,cAAc,EAAE9B,KAAK,CAAC6E,MAAM,CAACO,WAAW;AACxCrD,UAAAA,oBAAoB,EAAEmD,4BAA4B,GAAGlF,KAAK,CAAC6E,MAAM,CAACQ,aAAa,GAAGrF,KAAK,CAAC6E,MAAM,CAACO,WAAW;AAC1GpD,UAAAA,qBAAqB,EAAE,KAAA;SACxB,CAAA;AACH,OAAA;MACA,OAAO;AACLL,QAAAA,IAAI,EAAE6C,SAAS;AACf5C,QAAAA,mBAAmB,EAAE4C,SAAS;AAC9B3C,QAAAA,aAAa,EAAE7B,KAAK,CAAC6E,MAAM,CAACE,eAAe;AAC3CjD,QAAAA,cAAc,EAAE9B,KAAK,CAAC6E,MAAM,CAACQ,aAAa;AAC1CtD,QAAAA,oBAAoB,EAAE/B,KAAK,CAAC6E,MAAM,CAACQ,aAAa;AAChDrD,QAAAA,qBAAqB,EAAE,IAAA;OACxB,CAAA;AACL,GAAA;AACF,CAAA;AAEA,MAAM6D,iCAAiC,GAAG,GAAG,CAAA;AAC7C,MAAMC,mBAAmB,GAAGC,oBAAoB,GAAG,CAAC,CAAA;AACpD,MAAMC,sBAAsB,GAAGD,oBAAoB,GAAG,CAAC,CAAA;AAEvD,SAASxD,0BAA0BA,CACjCvC,KAAY,EACZsB,aAAsB,EACtBM,mBAAuC,EACvCI,qBAA8B,EACZ;AAClB,EAAA,oBAAOnB,GAAG,CAAC;AACToD,IAAAA,KAAK,EAAE3C,aAAa,GAAGwE,mBAAmB,GAAGE,sBAAsB;AACnEC,IAAAA,MAAM,EAAE3E,aAAa,GAAGwE,mBAAmB,GAAGE,sBAAsB;AACpEE,IAAAA,eAAe,EAAEtE,mBAAmB;AACpCuE,IAAAA,YAAY,EAAE,KAAK;AACnBxD,IAAAA,OAAO,EAAE,MAAM;AACfyB,IAAAA,cAAc,EAAE,QAAQ;AACxBP,IAAAA,UAAU,EAAE,QAAQ;AACpB2B,IAAAA,QAAQ,EAAE,MAAM;AAChBxC,IAAAA,UAAU,EAAE,CAAC;IACboD,MAAM,EAAEpE,qBAAqB,GAAI,CAAYhC,UAAAA,EAAAA,KAAK,CAAC6E,MAAM,CAACE,eAAgB,CAAA,CAAC,GAAGP,SAAAA;AAChF,GAAC,EAAAzD,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,oCAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASiC,0BAA0BA,CAAClD,KAAY,EAAEO,YAAqB,EAAEe,aAAsB,EAAoB;AACjH,EAAA,MAAM4E,eAAe,GAAG5E,aAAa,GAAGtB,KAAK,CAAC6E,MAAM,CAACI,iBAAiB,GAAGjF,KAAK,CAAC6E,MAAM,CAACuB,MAAM,CAAA;AAE5F,EAAA,IAAI7F,YAAY,EAAE;AAChB,IAAA,oBAAOM,GAAG,CAAC;MACTqF,eAAe;AACfD,MAAAA,MAAM,EAAE,KAAK;AACbhC,MAAAA,KAAK,EAAE,MAAM;AACboC,MAAAA,QAAQ,EAAErG,KAAK,CAAC+D,OAAO,CAACC,EAAAA;AAC1B,KAAC,EAAAjD,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,oCAAA,CAAA,CAAA;AACJ,GAAA;AACA,EAAA,oBAAOJ,GAAG,CAAC;IACTqF,eAAe;AACfD,IAAAA,MAAM,EAAE,MAAM;AACdK,IAAAA,SAAS,EAAEtG,KAAK,CAAC+D,OAAO,CAACC,EAAE;AAC3BC,IAAAA,KAAK,EAAE,KAAK;AACZsC,IAAAA,SAAS,EAAE,YAAY;AACvBC,IAAAA,UAAU,EAAExG,KAAK,CAAC+D,OAAO,CAACC,EAAAA;AAC5B,GAAC,EAAAjD,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,oCAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASmC,wBAAwBA,CAC/BpD,KAAY,EACZO,YAAqB,EACrBgB,UAAmB,EACnBkF,SAAiB,EACC;AAClB,EAAA,oBAAO5F,GAAG,CAAC;AACT0F,IAAAA,SAAS,EAAE,YAAY;AACvBtC,IAAAA,KAAK,EAAE,MAAM;AACbyC,IAAAA,UAAU,EAAEnG,YAAY,IAAIgB,UAAU,GAAG,YAAY,GAAGiD,SAAS;AACjEmC,IAAAA,QAAQ,EAAEpG,YAAY,GAAGsF,iCAAiC,GAAGrB,SAAS;IACtEoC,aAAa,EAAErG,YAAY,GAAGiE,SAAS,GAAGxE,KAAK,CAAC+D,OAAO,CAAC8C,EAAE;IAC1DnE,KAAK,EAAG,GAAE+D,SAAU,CAAA,WAAA,CAAA;AACtB,GAAC,EAAA1F,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,kCAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASqC,4BAA4BA,CAACmD,SAAiB,EAAoB;AACzE,EAAA,oBAAO5F,GAAG,CAAC;IACT6B,KAAK,EAAG,GAAE+D,SAAU,CAAA,WAAA,CAAA;AACtB,GAAC,EAAA1F,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,sCAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASuC,sCAAsCA,CAACxD,KAAY,EAAE8G,aAAsB,EAAoB;AACtG,EAAA,oBAAOjG,GAAG,CAAC;IACTkG,UAAU,EAAED,aAAa,GAAG9G,KAAK,CAAC+D,OAAO,CAAC8C,EAAE,GAAG,CAAA;AACjD,GAAC,EAAA9F,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,gDAAA,CAAA,CAAA;AACJ,CAAA;AAEA,SAASqB,eAAeA,CAAA0E,KAAA,EAIiD;EAAA,IAJhD;IACvB9F,QAAQ;IACRX,YAAY;AACZe,IAAAA,aAAAA;AACoE,GAAC,GAAA0F,KAAA,CAAA;EACrE,MAAM;AAAEhH,IAAAA,KAAAA;GAAO,GAAGC,oBAAoB,EAAE,CAAA;AACxC,EAAA,IAAIM,YAAY,EAAE;AAChB,IAAA,OACEI,GAAA,CAAA,KAAA,EAAA;MACEE,GAAG,eAAA4B,GAAA,CAAE;AACHE,QAAAA,OAAO,EAAE,MAAM;AACfsE,QAAAA,mBAAmB,EAAG,CACpB3F,EAAAA,aAAa,GAAGwE,mBAAmB,GAAGE,sBACvC,CAAyB,wBAAA,CAAA;QAC1BkB,gBAAgB,EAAG,CAAEpB,EAAAA,mBAAoB,CAAQ,OAAA,CAAA;AACjDjC,QAAAA,UAAU,EAAE,QAAQ;AACpBsD,QAAAA,YAAY,EAAE,YAAY;AAC1BC,QAAAA,aAAa,EAAEpH,KAAK,CAAC+D,OAAO,CAAC8C,EAAE;AAC/B5C,QAAAA,KAAK,EAAE,MAAA;AACT,OAAC,EAAAlD,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,yBAAA,CAAA;AAAAC,MAAAA,QAAA,EAEDA,QAAAA;AAAQ,KACN,CAAC,CAAA;AAEV,GAAA;AACA,EAAA,OACEP,GAAA,CAAA,KAAA,EAAA;IACEE,GAAG,eAAA4B,GAAA,CAAE;AACHE,MAAAA,OAAO,EAAE,MAAM;MACfsE,mBAAmB,EAAG,CAAEnB,EAAAA,mBAAoB,CAAQ,OAAA,CAAA;AACpDjC,MAAAA,UAAU,EAAE,QAAQ;AACpBsD,MAAAA,YAAY,EAAE,YAAY;AAC1BC,MAAAA,aAAa,EAAEpH,KAAK,CAAC+D,OAAO,CAACC,EAAE;AAC/BqD,MAAAA,UAAU,EAAErH,KAAK,CAAC+D,OAAO,CAAC8C,EAAE;AAC5B5C,MAAAA,KAAK,EAAE,MAAM;AACb,MAAA,kBAAkB,EAAE;AAClB;AACAqD,QAAAA,WAAW,EAAE,QAAA;AACf,OAAA;AACF,KAAC,EAAAvG,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,yBAAA,CAAA;AAAAC,IAAAA,QAAA,EAEDA,QAAAA;AAAQ,GACN,CAAC,CAAA;AAEV,CAAA;;AAEA;AACA,MAAMqG,8BAA8B,GAAG,GAAG,CAAA;;AAE1C;AACO,SAASnH,sBAAsBA,CAAAoH,KAAA,EAUnC;EAAA,IAVoC;AACrC9H,IAAAA,kBAAkB,GAAG,YAAY;IACjCK,UAAU;IACVM,OAAO;AACPH,IAAAA,GAAAA;AAMF,GAAC,GAAAsH,KAAA,CAAA;EACC,MAAM,CAAC/H,SAAS,EAAEgI,YAAY,CAAC,GAAGC,QAAQ,CAAChI,kBAAkB,CAAC,CAAA;AAE9DiI,EAAAA,SAAS,CAAC,MAAM;AACd,IAAA,IAAIjI,kBAAkB,KAAK,UAAU,IAAI,CAACW,OAAO,IAAI,CAACN,UAAU,IAAI,CAACG,GAAG,CAAC0H,OAAO,EAAE;AAChF,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAIC,SAAiB,CAAA;AACrB,IAAA,MAAMC,cAAc,GAAG,IAAIC,cAAc,CAAEC,OAAO,IAAK;MACrDH,SAAS,GAAGI,qBAAqB,CAAC,MAAM;AACtC,QAAA,IAAID,OAAO,CAAC1H,MAAM,KAAK,CAAC,EAAE;UACxB,MAAM2D,KAAK,GAAG+D,OAAO,CAAC,CAAC,CAAC,CAACE,MAAM,CAACC,WAAW,IAAI,CAAC,CAAA;UAChDV,YAAY,CAACxD,KAAK,GAAGsD,8BAA8B,GAAG,UAAU,GAAG,YAAY,CAAC,CAAA;AAClF,SAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;IACF,IAAIrH,GAAG,CAAC0H,OAAO,EAAE;AACfE,MAAAA,cAAc,CAACM,OAAO,CAAClI,GAAG,CAAC0H,OAAO,CAAC,CAAA;AACrC,KAAA;AACA,IAAA,OAAO,MAAM;MACXE,cAAc,CAACO,UAAU,EAAE,CAAA;MAC3BC,oBAAoB,CAACT,SAAS,CAAC,CAAA;KAChC,CAAA;GACF,EAAE,CAACnI,kBAAkB,EAAEW,OAAO,EAAEH,GAAG,EAAEH,UAAU,CAAC,CAAC,CAAA;EAElD,OAAO;AAAEN,IAAAA,SAAAA;GAAW,CAAA;AACtB;;;;"}