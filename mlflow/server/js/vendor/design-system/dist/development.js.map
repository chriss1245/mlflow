{"version":3,"file":"development.js","sources":["../src/development/Slider/Slider.tsx","../src/development/ChatUI/ChatInput.tsx","../src/development/ChatUI/CodeSnippet.tsx","../src/development/ChatUI/Feedback.tsx","../src/development/ChatUI/Message.tsx","../src/development/ChatUI/MessageActionButton.tsx","../src/development/ChatUI/MessageBody.tsx","../src/development/ChatUI/MessageHeader.tsx","../src/development/ChatUI/MessagePagination.tsx","../src/development/ChatUI/index.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport * as RadixSlider from '@radix-ui/react-slider';\nimport { forwardRef } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport type { Theme } from '../../theme';\n\nexport type SliderRootProps = Omit<RadixSlider.SliderProps, 'orientation'>;\nexport type SliderTrackProps = RadixSlider.SliderTrackProps;\nexport type SliderRangeProps = RadixSlider.SliderRangeProps;\nexport type SliderThumbProps = RadixSlider.SliderThumbProps;\n\nconst getRootStyles = () => {\n  return css({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n\n    '&[data-orientation=\"vertical\"]': {\n      flexDirection: 'column',\n      width: 20,\n      height: 100,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 20,\n      width: 200,\n    },\n  });\n};\n\nexport const Root = forwardRef<HTMLElement, SliderRootProps>((props: SliderRootProps, ref): JSX.Element => {\n  return <RadixSlider.Root css={getRootStyles()} {...props} ref={ref} />;\n});\n\nconst getTrackStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.grey100,\n    position: 'relative',\n    flexGrow: 1,\n    borderRadius: 9999,\n\n    '&[data-orientation=\"vertical\"]': {\n      width: 3,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 3,\n    },\n  });\n};\n\nexport const Track = forwardRef<HTMLElement, SliderTrackProps>((props: SliderTrackProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Track css={getTrackStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getRangeStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.primary,\n    position: 'absolute',\n    borderRadius: 9999,\n    height: '100%',\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey100,\n    },\n  });\n};\n\nexport const Range = forwardRef<HTMLElement, SliderRangeProps>((props: SliderRangeProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Range css={getRangeStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getThumbStyles = (theme: Theme) => {\n  return css({\n    display: 'block',\n    width: 20,\n    height: 20,\n    backgroundColor: theme.colors.actionPrimaryBackgroundDefault,\n    boxShadow: `0 2px 4px 0 ${theme.colors.grey400}`,\n    borderRadius: 10,\n    outline: 'none',\n\n    '&:hover': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundHover,\n    },\n\n    '&:focus': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundPress,\n    },\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey200,\n      boxShadow: 'none',\n    },\n  });\n};\n\nexport const Thumb = forwardRef<HTMLElement, SliderThumbProps>((props: SliderThumbProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Thumb css={getThumbStyles(theme)} {...props} ref={ref} />;\n});\n","import { css } from '@emotion/react';\nimport React from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CursorIcon } from '../../design-system/Icon';\nimport { Input } from '../../design-system/Input';\nimport type { TextAreaProps } from '../../design-system/Input';\n\ntype ChatInputProps = {\n  className?: string;\n  textAreaProps?: TextAreaProps;\n  onSubmit?: (value: string) => void;\n  suggestionButtons?: React.ReactNode;\n};\n\nconst chatInputStyles = {\n  container: css({\n    backgroundColor: 'var(--background-primary)',\n    padding: 'var(--spacing-sm)',\n    position: 'relative',\n  }),\n\n  suggestionButtons: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n    marginBottom: 'var(--spacing-sm)',\n  }),\n\n  textArea: css({\n    minWidth: '100%',\n    maxHeight: '150px !important',\n  }),\n\n  button: css({\n    position: 'absolute',\n    bottom: 'calc(var(--spacing-sm) + 4px)',\n    right: 'calc(var(--spacing-sm) + 4px)',\n    // Flip horizontally; the existing icon points to the left but this should be pointing to the right.\n    transform: 'scaleX(-1)',\n  }),\n};\n\nexport const ChatInput = ({ className, onSubmit, textAreaProps, suggestionButtons }: ChatInputProps) => {\n  const { theme } = useDesignSystemTheme();\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n\n    onSubmit?.(value);\n    setValue('');\n  };\n\n  return (\n    <div\n      css={chatInputStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--background-primary' as string]: theme.colors.backgroundPrimary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n      className={className}\n    >\n      {suggestionButtons && <div css={chatInputStyles.suggestionButtons}>{suggestionButtons}</div>}\n\n      <Input.TextArea\n        autoSize\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Send a message\"\n        css={chatInputStyles.textArea}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && !e.metaKey && !e.ctrlKey && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit();\n          }\n        }}\n        {...textAreaProps}\n      />\n      <Button size=\"small\" css={chatInputStyles.button} icon={<CursorIcon />} onClick={handleSubmit} />\n    </div>\n  );\n};\n\nexport default ChatInput;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype CodeSnippetProps = {\n  language: string;\n  buttons: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst snippetStyles = {\n  container: css({\n    margin: 'var(--spacing-md) 0',\n  }),\n\n  header: css({\n    backgroundColor: 'var(--color-grey700)',\n    color: 'var(--color-grey300)',\n    borderRadius: 'var(--border-radius) var(--border-radius) 0 0',\n    padding: 'var(--spacing-sm) var(--spacing-sm) var(--spacing-sm) var(--spacing-md)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  }),\n\n  buttonSvg: css({\n    svg: {\n      color: 'var(--color-grey300)',\n    },\n  }),\n\n  code: css({\n    padding: 'var(--spacing-sm) var(--spacing-md)',\n    margin: '0',\n    borderRadius: '0 0 var(--border-radius) var(--border-radius)',\n    backgroundColor: 'var(--color-grey800)',\n    color: 'var(--color-grey300)',\n  }),\n};\n\nexport const CodeSnippet = ({ language, buttons, children }: CodeSnippetProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={snippetStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--border-radius' as string]: `${theme.general.borderRadiusBase}px`,\n        ['--color-grey700' as string]: theme.colors.grey700,\n        ['--color-grey300' as string]: theme.colors.grey300,\n        ['--color-grey800' as string]: theme.colors.grey800,\n      }}\n    >\n      <div css={snippetStyles.header}>\n        <span>{language}</span>\n        <div css={snippetStyles.buttonSvg}>{buttons}</div>\n      </div>\n      <pre css={snippetStyles.code}>{children}</pre>\n    </div>\n  );\n};\n\nexport default CodeSnippet;\n","import { css } from '@emotion/react';\nimport { useState } from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CloseIcon, FaceFrownIcon, FaceNeutralIcon, FaceSmileIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype FeedbackProps = {\n  onFeedback: (feedback: 'Better' | 'Same' | 'Worse') => void;\n};\n\nconst feedbackStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  }),\n\n  feedbackPrompt: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  feedbackOptions: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n  }),\n};\n\nexport const Feedback = ({ onFeedback }: FeedbackProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const { theme } = useDesignSystemTheme();\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div\n      css={feedbackStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--text-secondary' as string]: theme.colors.textSecondary,\n      }}\n    >\n      <div css={feedbackStyles.feedbackPrompt}>\n        <Typography.Text\n          style={{\n            color: theme.colors.textSecondary,\n          }}\n        >\n          Was this response:\n        </Typography.Text>\n        <div css={feedbackStyles.feedbackOptions}>\n          <Button\n            icon={<FaceSmileIcon />}\n            onClick={() => {\n              onFeedback('Better');\n              setIsVisible(false);\n            }}\n          >\n            Better\n          </Button>\n          <Button\n            icon={<FaceNeutralIcon />}\n            onClick={() => {\n              onFeedback('Same');\n              setIsVisible(false);\n            }}\n          >\n            Same\n          </Button>\n          <Button\n            icon={<FaceFrownIcon />}\n            onClick={() => {\n              onFeedback('Worse');\n              setIsVisible(false);\n            }}\n          >\n            Worse\n          </Button>\n        </div>\n      </div>\n      <Button icon={<CloseIcon />} onClick={() => setIsVisible(false)} />\n    </div>\n  );\n};\n\nexport default Feedback;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageProps = {\n  isActiveUser: boolean;\n  children: React.ReactNode;\n};\n\nconst messageStyles = {\n  container: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n    paddingTop: 'var(--spacing-md)',\n    paddingRight: 'var(--spacing-sm)',\n    paddingBottom: 'var(--spacing-md)',\n    paddingLeft: 'calc(var(--spacing-md) * 2)',\n    backgroundColor: 'var(--background)',\n    borderBottom: `1px solid var(--border-decorative)`,\n  }),\n};\n\nexport const Message = ({ isActiveUser, children }: MessageProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={messageStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--background' as string]: isActiveUser ? theme.colors.backgroundPrimary : theme.colors.backgroundSecondary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Message;\n","import { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\n\nimport type { ButtonProps } from '../../design-system/Button';\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CheckIcon } from '../../design-system/Icon';\n\nconst buttonStyles = {\n  container: css({\n    position: 'relative',\n    display: 'inline-block',\n    width: 'max-content',\n  }),\n  checkIcon: css({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    pointerEvents: 'none',\n\n    svg: {\n      color: 'var(--checkmark-color)',\n    },\n  }),\n};\n\nconst MessageActionButton = (props: ButtonProps) => {\n  const [showCheck, setShowCheck] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    setShowCheck(true);\n    props.onClick?.(e);\n  };\n\n  if (props.children) {\n    throw new Error('MessageActionButton: Children not supported; use as icon-only button.');\n  }\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    if (showCheck) {\n      timeoutId = setTimeout(() => {\n        setShowCheck(false);\n      }, 750);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [showCheck]);\n\n  return (\n    <span\n      css={buttonStyles.container}\n      style={{\n        ['--checkmark-color' as string]: theme.colors.green500,\n      }}\n    >\n      <Button\n        size=\"small\"\n        {...props}\n        onClick={handleClick}\n        css={{\n          svg: {\n            transition: showCheck ? 'none' : 'opacity 350ms',\n            opacity: showCheck ? '0' : '1',\n          },\n        }}\n      />\n      <CheckIcon\n        css={buttonStyles.checkIcon}\n        style={{\n          transition: showCheck ? 'none' : 'opacity 350ms',\n          opacity: showCheck ? '1' : '0',\n        }}\n      />\n    </span>\n  );\n};\n\nexport default MessageActionButton;\n","import { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageBodyProps = {\n  children: React.ReactNode;\n};\n\nconst MessageBody = ({ children }: MessageBodyProps) => {\n  const { getPrefixedClassName } = useDesignSystemTheme();\n\n  const typographyClassname = getPrefixedClassName('typography');\n\n  return (\n    <div\n      css={{\n        [`& .${typographyClassname}:last-of-type`]: {\n          marginBottom: 0,\n        },\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default MessageBody;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { Typography } from '../../design-system/Typography';\n\ntype MessageHeaderProps = {\n  userName: React.ReactNode;\n  avatarURL?: string;\n  leftContent?: React.ReactNode;\n  rightContent?: React.ReactNode;\n};\n\nconst headerStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n  }),\n\n  leftContent: css({\n    display: 'flex',\n    alignItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  rightContent: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n\n  avatar: css({\n    position: 'absolute',\n    left: -22,\n    top: 2,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: 'var(--spacing-md)',\n    height: 'var(--spacing-md)',\n    borderRadius: '50%',\n  }),\n};\n\nconst MessageHeader = ({ userName, avatarURL, leftContent, rightContent }: MessageHeaderProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={headerStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <div css={headerStyles.leftContent}>\n        <div\n          css={headerStyles.avatar}\n          style={{\n            backgroundImage: `url(${avatarURL}), linear-gradient(180deg, #FFD983 0%, #FFB800 100%)`,\n          }}\n        />\n        <Typography.Text bold>{userName}</Typography.Text>\n        {leftContent}\n      </div>\n      <div css={headerStyles.rightContent}>{rightContent}</div>\n    </div>\n  );\n};\n\nexport default MessageHeader;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype PaginationProps = {\n  onPrevious: () => void;\n  onNext: () => void;\n  current: number;\n  total: number;\n};\n\nconst paginationStyles = {\n  container: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  button: css({\n    border: 'none',\n    backgroundColor: 'transparent',\n    padding: 0,\n    display: 'flex',\n    height: 'var(--spacing-md)',\n    alignItems: 'center',\n  }),\n};\n\nexport const MessagePagination = ({ onPrevious, onNext, current, total }: PaginationProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={paginationStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <button\n        css={paginationStyles.button}\n        onClick={onPrevious}\n        style={{\n          color: current === 1 ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === 1 ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronLeftIcon />\n      </button>\n      <Typography.Text\n        style={{\n          color: theme.colors.textSecondary,\n        }}\n      >{`${current}/${total}`}</Typography.Text>\n      <button\n        css={paginationStyles.button}\n        onClick={onNext}\n        style={{\n          color: current === total ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === total ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronRightIcon />\n      </button>\n    </div>\n  );\n};\n\nexport default MessagePagination;\n","import ChatInput from './ChatInput';\nimport CodeSnippet from './CodeSnippet';\nimport Feedback from './Feedback';\nimport Message from './Message';\nimport MessageActionButton from './MessageActionButton';\nimport MessageBody from './MessageBody';\nimport MessageHeader from './MessageHeader';\nimport MessagePagination from './MessagePagination';\n\nexport const ChatUI = {\n  MessageActionButton,\n  MessageHeader,\n  MessageBody,\n  MessagePagination,\n  Message,\n  Feedback,\n  CodeSnippet,\n  ChatInput,\n};\n"],"names":["_ref","process","env","NODE_ENV","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","getRootStyles","Root","forwardRef","props","ref","_jsx","RadixSlider","css","getTrackStyles","theme","backgroundColor","colors","grey100","position","flexGrow","borderRadius","width","height","Track","useDesignSystemTheme","getRangeStyles","primary","Range","getThumbStyles","display","actionPrimaryBackgroundDefault","boxShadow","grey400","outline","actionPrimaryBackgroundHover","actionPrimaryBackgroundPress","grey200","Thumb","chatInputStyles","container","suggestionButtons","textArea","button","ChatInput","className","onSubmit","textAreaProps","value","setValue","React","useState","handleSubmit","_jsxs","style","spacing","sm","backgroundPrimary","borderDecorative","children","Input","TextArea","autoSize","onChange","e","target","placeholder","onKeyDown","key","metaKey","ctrlKey","shiftKey","preventDefault","Button","size","icon","CursorIcon","onClick","snippetStyles","header","buttonSvg","code","CodeSnippet","language","buttons","md","general","borderRadiusBase","grey700","grey300","grey800","feedbackStyles","feedbackPrompt","feedbackOptions","Feedback","onFeedback","isVisible","setIsVisible","textSecondary","Typography","Text","color","FaceSmileIcon","FaceNeutralIcon","FaceFrownIcon","CloseIcon","messageStyles","flexDirection","gap","paddingTop","paddingRight","paddingBottom","paddingLeft","borderBottom","Message","isActiveUser","backgroundSecondary","buttonStyles","checkIcon","MessageActionButton","showCheck","setShowCheck","handleClick","_props$onClick","call","Error","useEffect","timeoutId","setTimeout","clearTimeout","green500","_css","svg","transition","opacity","CheckIcon","MessageBody","getPrefixedClassName","typographyClassname","marginBottom","headerStyles","leftContent","rightContent","avatar","left","top","backgroundSize","backgroundPosition","MessageHeader","userName","avatarURL","backgroundImage","bold","paginationStyles","MessagePagination","onPrevious","onNext","current","total","actionDisabledText","cursor","ChevronLeftIcon","ChevronRightIcon","ChatUI"],"mappings":"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"}